plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	maven {
		url = "https://maven.terraformersmc.com/releases"
		name = "TerraformersMC"
	}
	exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
	maven {
		url = 'https://maven.wispforest.io'
		name = 'WispForest'
	}
	mavenCentral()
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
configurations {
	externalJavadoc
}
dependencies {
	// JUint
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

	// Minecraft
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	externalJavadoc (variantOf(libs.quilt.mappings) { classifier 'javadoc' }) { transitive = false }
	modImplementation libs.quilt.loader

	// QSL / Fabric compat API
	modImplementation libs.quilted.fabric.api
	externalJavadoc (variantOf(libs.quilt.standard.library) { classifier 'fat-javadoc' }) { transitive = false }
	externalJavadoc (variantOf(libs.quilted.fabric.api) { classifier 'fatjavadoc' }) { transitive = false }

	// ModMenu support at runtime
	modRuntimeOnly "com.terraformersmc:modmenu:7.0.1"

	// Xaero's Minimap is used for waypoint rendering
    modImplementation "maven.modrinth:xaeros-minimap:23.4.4_Fabric_${libs.versions.minecraft.get()}"

	// OWO Lib
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    annotationProcessor "io.wispforest:owo-lib:${project.owo_version}"
    include "io.wispforest:owo-sentinel:${project.owo_version}"

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'

	// GSON
	implementation 'com.google.code.gson:gson:2.10.1'
}

task downloadJavadocs(type: Copy) {
	from configurations.externalJavadoc
	into 'build/external/javadoc-jars'
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

test {
    useJUnitPlatform()
}
